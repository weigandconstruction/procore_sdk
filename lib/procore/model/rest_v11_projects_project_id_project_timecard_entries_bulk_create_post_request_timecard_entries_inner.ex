# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.RestV11ProjectsProjectIdProjectTimecardEntriesBulkCreatePostRequestTimecardEntriesInner do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :hours,
    :billable,
    :date,
    :description,
    :timecard_time_type_id,
    :cost_code_id,
    :wbs_code_id,
    :party_id,
    :origin_id,
    :origin_data,
    :line_item_type_id,
    :clock_in_time,
    :clock_out_time,
    :clock_in_id,
    :clock_out_id,
    :lunch_start_time,
    :lunch_stop_time,
    :lunch_clock_in_id,
    :lunch_clock_out_id,
    :set_timecard_time_type_automatically,
    :project_id,
    :work_classification_id,
    :approval_status,
    :timesheet_id
  ]

  @type t :: %__MODULE__{
          :hours => String.t() | nil,
          :billable => boolean() | nil,
          :date => Date.t() | nil,
          :description => String.t() | nil,
          :timecard_time_type_id => integer() | nil,
          :cost_code_id => integer() | nil,
          :wbs_code_id => integer() | nil,
          :party_id => integer() | nil,
          :origin_id => integer() | nil,
          :origin_data => String.t() | nil,
          :line_item_type_id => integer() | nil,
          :clock_in_time => String.t() | nil,
          :clock_out_time => String.t() | nil,
          :clock_in_id => integer() | nil,
          :clock_out_id => integer() | nil,
          :lunch_start_time => String.t() | nil,
          :lunch_stop_time => String.t() | nil,
          :lunch_clock_in_id => integer() | nil,
          :lunch_clock_out_id => integer() | nil,
          :set_timecard_time_type_automatically => boolean() | nil,
          :project_id => integer() | nil,
          :work_classification_id => integer() | nil,
          :approval_status => String.t() | nil,
          :timesheet_id => integer() | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:date, :date, nil)
  end
end
