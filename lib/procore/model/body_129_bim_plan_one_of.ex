# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.Body129BimPlanOneOf do
  @moduledoc """
  BIM Plan
  """

  @derive Jason.Encoder
  defstruct [
    :bim_level_id,
    :drawing_id,
    :upload_uuid,
    :sheet_map_start,
    :sheet_map_end,
    :model_map_start,
    :model_map_end
  ]

  @type t :: %__MODULE__{
          :bim_level_id => integer(),
          :drawing_id => integer() | nil,
          :upload_uuid => String.t() | nil,
          :sheet_map_start => Procore.Model.Body129BimPlanOneOfSheetMapStart.t() | nil,
          :sheet_map_end => Procore.Model.Body129BimPlanOneOfSheetMapStart.t() | nil,
          :model_map_start => Procore.Model.Body129BimPlanOneOfModelMapStart.t() | nil,
          :model_map_end => Procore.Model.Body129BimPlanOneOfModelMapStart.t() | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :sheet_map_start,
      :struct,
      Procore.Model.Body129BimPlanOneOfSheetMapStart
    )
    |> Deserializer.deserialize(
      :sheet_map_end,
      :struct,
      Procore.Model.Body129BimPlanOneOfSheetMapStart
    )
    |> Deserializer.deserialize(
      :model_map_start,
      :struct,
      Procore.Model.Body129BimPlanOneOfModelMapStart
    )
    |> Deserializer.deserialize(
      :model_map_end,
      :struct,
      Procore.Model.Body129BimPlanOneOfModelMapStart
    )
  end
end
