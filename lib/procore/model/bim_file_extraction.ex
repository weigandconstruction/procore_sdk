# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.BimFileExtraction do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :parent_bim_file_extraction_id,
    :bim_file_upload_id,
    :bim_file_upload,
    :bim_model_revision_id,
    :status,
    :progress,
    :retry_count,
    :viewpoint_id,
    :extraction_format_requests,
    :extraction_items,
    :errors,
    :created_by,
    :created_at,
    :updated_at
  ]

  @type t :: %__MODULE__{
          :id => integer() | nil,
          :parent_bim_file_extraction_id => integer() | nil,
          :bim_file_upload_id => integer() | nil,
          :bim_file_upload => Procore.Model.BimFileUpload.t() | nil,
          :bim_model_revision_id => integer() | nil,
          :status => String.t() | nil,
          :progress => float() | nil,
          :retry_count => integer() | nil,
          :viewpoint_id => integer() | nil,
          :extraction_format_requests => [Procore.Model.BimFileExtractionItemType.t()] | nil,
          :extraction_items => [Procore.Model.BimFileExtractionItem.t()] | nil,
          :errors => [Procore.Model.BimFileExtractionItemError.t()] | nil,
          :created_by => Procore.Model.BimFileExtractionCreatedBy.t() | nil,
          :created_at => DateTime.t() | nil,
          :updated_at => DateTime.t() | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:bim_file_upload, :struct, Procore.Model.BimFileUpload)
    |> Deserializer.deserialize(
      :extraction_format_requests,
      :list,
      Procore.Model.BimFileExtractionItemType
    )
    |> Deserializer.deserialize(:extraction_items, :list, Procore.Model.BimFileExtractionItem)
    |> Deserializer.deserialize(:errors, :list, Procore.Model.BimFileExtractionItemError)
    |> Deserializer.deserialize(:created_by, :struct, Procore.Model.BimFileExtractionCreatedBy)
    |> Deserializer.deserialize(:created_at, :datetime, nil)
    |> Deserializer.deserialize(:updated_at, :datetime, nil)
  end
end
