# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.BusinessNormalView do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :name,
    :dba,
    :website,
    :about,
    :published,
    :primary_slug,
    :logo_url,
    :source,
    :addresses,
    :provided_services,
    :construction_sectors,
    :business_types,
    :project_types,
    :classifications,
    :coverage_areas,
    :claimed,
    :Tags,
    :start_of_operations
  ]

  @type t :: %__MODULE__{
          :id => String.t() | nil,
          :name => String.t() | nil,
          :dba => String.t() | nil,
          :website => String.t() | nil,
          :about => String.t() | nil,
          :published => boolean() | nil,
          :primary_slug => String.t() | nil,
          :logo_url => String.t() | nil,
          :source => Procore.Model.BusinessNormalViewSource.t() | nil,
          :addresses => [Procore.Model.BusinessNormalViewAddressesInner.t()] | nil,
          :provided_services => [Procore.Model.BusinessNormalViewProvidedServicesInner.t()] | nil,
          :construction_sectors => [String.t()] | nil,
          :business_types => [String.t()] | nil,
          :project_types => [String.t()] | nil,
          :classifications => [Procore.Model.BusinessNormalViewClassificationsInner.t()] | nil,
          :coverage_areas => [Procore.Model.BusinessNormalViewCoverageAreasInner.t()] | nil,
          :claimed => boolean() | nil,
          :Tags => Procore.Model.BusinessNormalViewTags.t() | nil,
          :start_of_operations => Date.t() | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:source, :struct, Procore.Model.BusinessNormalViewSource)
    |> Deserializer.deserialize(:addresses, :list, Procore.Model.BusinessNormalViewAddressesInner)
    |> Deserializer.deserialize(
      :provided_services,
      :list,
      Procore.Model.BusinessNormalViewProvidedServicesInner
    )
    |> Deserializer.deserialize(
      :classifications,
      :list,
      Procore.Model.BusinessNormalViewClassificationsInner
    )
    |> Deserializer.deserialize(
      :coverage_areas,
      :list,
      Procore.Model.BusinessNormalViewCoverageAreasInner
    )
    |> Deserializer.deserialize(:Tags, :struct, Procore.Model.BusinessNormalViewTags)
    |> Deserializer.deserialize(:start_of_operations, :date, nil)
  end
end
