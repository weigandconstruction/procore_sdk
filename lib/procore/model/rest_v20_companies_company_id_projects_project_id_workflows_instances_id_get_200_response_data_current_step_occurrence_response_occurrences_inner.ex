# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.RestV20CompaniesCompanyIdProjectsProjectIdWorkflowsInstancesIdGet200ResponseDataCurrentStepOccurrenceResponseOccurrencesInner do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :submitted_at,
    :selected_response_option,
    :attachments,
    :assignee
  ]

  @type t :: %__MODULE__{
          :submitted_at => DateTime.t() | nil,
          :selected_response_option =>
            Procore.Model.RestV20CompaniesCompanyIdProjectsProjectIdWorkflowsInstancesIdGet200ResponseDataCurrentStepOccurrenceResponseOccurrencesInnerSelectedResponseOption.t()
            | nil,
          :attachments =>
            [
              Procore.Model.RestV20CompaniesCompanyIdProjectsProjectIdWorkflowsInstancesIdGet200ResponseDataCurrentStepOccurrenceResponseOccurrencesInnerAttachmentsInner.t()
            ]
            | nil,
          :assignee =>
            Procore.Model.RestV20CompaniesCompanyIdProjectsProjectIdWorkflowsInstancesIdGet200ResponseDataCurrentStepOccurrenceResponseOccurrencesInnerAssignee.t()
            | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:submitted_at, :datetime, nil)
    |> Deserializer.deserialize(
      :selected_response_option,
      :struct,
      Procore.Model.RestV20CompaniesCompanyIdProjectsProjectIdWorkflowsInstancesIdGet200ResponseDataCurrentStepOccurrenceResponseOccurrencesInnerSelectedResponseOption
    )
    |> Deserializer.deserialize(
      :attachments,
      :list,
      Procore.Model.RestV20CompaniesCompanyIdProjectsProjectIdWorkflowsInstancesIdGet200ResponseDataCurrentStepOccurrenceResponseOccurrencesInnerAttachmentsInner
    )
    |> Deserializer.deserialize(
      :assignee,
      :struct,
      Procore.Model.RestV20CompaniesCompanyIdProjectsProjectIdWorkflowsInstancesIdGet200ResponseDataCurrentStepOccurrenceResponseOccurrencesInnerAssignee
    )
  end
end
