# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.RestV10CompaniesCompanyIdTimecardEntriesGet200ResponseInner do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :created_at,
    :date,
    :deleted_at,
    :description,
    :billable,
    :in_progress,
    :hours,
    :time_in,
    :time_out,
    :lunch_time,
    :approval_status,
    :updated_at,
    :timecard_type,
    :origin_id,
    :origin_data,
    :timesheet,
    :cost_code,
    :sub_job,
    :created_by,
    :login_information,
    :timecard_time_type,
    :party,
    :crew,
    :procore_signature,
    :project,
    :clock_in,
    :clock_out,
    :line_item_type_id,
    :custom_fields,
    :automatically_split_timecard_entries
  ]

  @type t :: %__MODULE__{
          :id => integer() | nil,
          :created_at => DateTime.t() | nil,
          :date => Date.t() | nil,
          :deleted_at => DateTime.t() | nil,
          :description => String.t() | nil,
          :billable => boolean() | nil,
          :in_progress => boolean() | nil,
          :hours => String.t() | nil,
          :time_in => DateTime.t() | nil,
          :time_out => DateTime.t() | nil,
          :lunch_time => String.t() | nil,
          :approval_status => String.t() | nil,
          :updated_at => DateTime.t() | nil,
          :timecard_type => String.t() | nil,
          :origin_id => integer() | nil,
          :origin_data => String.t() | nil,
          :timesheet => Procore.Model.Timesheet3.t() | nil,
          :cost_code => Procore.Model.TimecardEntryFullCostCode.t() | nil,
          :sub_job => Procore.Model.TimecardEntry3SubJob.t() | nil,
          :created_by =>
            Procore.Model.RestV10ProjectsProjectIdWorkLogsGet200ResponseInnerCreatedBy.t() | nil,
          :login_information =>
            Procore.Model.RestV10ProjectsProjectIdWorkLogsGet200ResponseInnerCreatedBy.t() | nil,
          :timecard_time_type => Procore.Model.TimecardTimeType.t() | nil,
          :party => Procore.Model.Party.t() | nil,
          :crew => Procore.Model.TimecardEntry3Crew.t() | nil,
          :procore_signature => Procore.Model.TimesheetsSignature.t() | nil,
          :project => Procore.Model.TimecardEntry3Project.t() | nil,
          :clock_in => Procore.Model.TimecardEntry3ClockIn.t() | nil,
          :clock_out => Procore.Model.TimecardEntry3ClockIn.t() | nil,
          :line_item_type_id => integer() | nil,
          :custom_fields =>
            Procore.Model.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet200ResponseInnerCustomFields.t()
            | nil,
          :automatically_split_timecard_entries => [Procore.Model.TimecardEntry3.t()] | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:created_at, :datetime, nil)
    |> Deserializer.deserialize(:date, :date, nil)
    |> Deserializer.deserialize(:deleted_at, :datetime, nil)
    |> Deserializer.deserialize(:time_in, :datetime, nil)
    |> Deserializer.deserialize(:time_out, :datetime, nil)
    |> Deserializer.deserialize(:updated_at, :datetime, nil)
    |> Deserializer.deserialize(:timesheet, :struct, Procore.Model.Timesheet3)
    |> Deserializer.deserialize(:cost_code, :struct, Procore.Model.TimecardEntryFullCostCode)
    |> Deserializer.deserialize(:sub_job, :struct, Procore.Model.TimecardEntry3SubJob)
    |> Deserializer.deserialize(
      :created_by,
      :struct,
      Procore.Model.RestV10ProjectsProjectIdWorkLogsGet200ResponseInnerCreatedBy
    )
    |> Deserializer.deserialize(
      :login_information,
      :struct,
      Procore.Model.RestV10ProjectsProjectIdWorkLogsGet200ResponseInnerCreatedBy
    )
    |> Deserializer.deserialize(:timecard_time_type, :struct, Procore.Model.TimecardTimeType)
    |> Deserializer.deserialize(:party, :struct, Procore.Model.Party)
    |> Deserializer.deserialize(:crew, :struct, Procore.Model.TimecardEntry3Crew)
    |> Deserializer.deserialize(:procore_signature, :struct, Procore.Model.TimesheetsSignature)
    |> Deserializer.deserialize(:project, :struct, Procore.Model.TimecardEntry3Project)
    |> Deserializer.deserialize(:clock_in, :struct, Procore.Model.TimecardEntry3ClockIn)
    |> Deserializer.deserialize(:clock_out, :struct, Procore.Model.TimecardEntry3ClockIn)
    |> Deserializer.deserialize(
      :custom_fields,
      :struct,
      Procore.Model.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet200ResponseInnerCustomFields
    )
    |> Deserializer.deserialize(
      :automatically_split_timecard_entries,
      :list,
      Procore.Model.TimecardEntry3
    )
  end
end
