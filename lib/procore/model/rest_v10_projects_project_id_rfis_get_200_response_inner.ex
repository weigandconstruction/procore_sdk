# NOTE: This file is auto generated by OpenAPI Generator 7.7.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInner do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :created_by,
    :link,
    :location_id,
    :questions,
    :custom_fields,
    :id,
    :assignee,
    :assignees,
    :ball_in_court,
    :ball_in_courts,
    :cost_code,
    :cost_impact,
    :created_at,
    :deleted,
    :deleted_at,
    :due_date,
    :initiated_at,
    :location,
    :full_number,
    :number,
    :prefix,
    :private,
    :project_stage,
    :received_from,
    :reference,
    :responsible_contractor,
    :rfi_manager,
    :schedule_impact,
    :status,
    :translated_status,
    :sub_job,
    :subject,
    :time_resolved,
    :updated_at
  ]

  @type t :: %__MODULE__{
          :created_by =>
            Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee.t() | nil,
          :link => String.t() | nil,
          :location_id => integer() | nil,
          :questions =>
            [Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfQuestionsInner.t()]
            | nil,
          :custom_fields =>
            Procore.Model.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet200ResponseInnerCustomFields.t()
            | nil,
          :id => integer() | nil,
          :assignee => Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee.t() | nil,
          :assignees =>
            [Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfAssigneesInner.t()]
            | nil,
          :ball_in_court =>
            Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee.t() | nil,
          :ball_in_courts =>
            [Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee.t()] | nil,
          :cost_code => Procore.Model.TimecardEntryFullCostCode.t() | nil,
          :cost_impact =>
            Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfCostImpact.t() | nil,
          :created_at => DateTime.t() | nil,
          :deleted => boolean() | nil,
          :deleted_at => DateTime.t() | nil,
          :due_date => Date.t() | nil,
          :initiated_at => DateTime.t() | nil,
          :location => Procore.Model.Location.t() | nil,
          :full_number => String.t() | nil,
          :number => String.t() | nil,
          :prefix => String.t() | nil,
          :private => boolean() | nil,
          :project_stage =>
            Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfProjectStage.t()
            | nil,
          :received_from =>
            Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee.t() | nil,
          :reference => String.t() | nil,
          :responsible_contractor =>
            Procore.Model.RestV10ProjectsProjectIdWasteLogsGet200ResponseInnerVendor.t() | nil,
          :rfi_manager =>
            Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee.t() | nil,
          :schedule_impact =>
            Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfScheduleImpact.t()
            | nil,
          :status => String.t() | nil,
          :translated_status => String.t() | nil,
          :sub_job => Procore.Model.TimecardEntry3SubJob.t() | nil,
          :subject => String.t() | nil,
          :time_resolved => DateTime.t() | nil,
          :updated_at => DateTime.t() | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :created_by,
      :struct,
      Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee
    )
    |> Deserializer.deserialize(
      :questions,
      :list,
      Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfQuestionsInner
    )
    |> Deserializer.deserialize(
      :custom_fields,
      :struct,
      Procore.Model.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet200ResponseInnerCustomFields
    )
    |> Deserializer.deserialize(
      :assignee,
      :struct,
      Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee
    )
    |> Deserializer.deserialize(
      :assignees,
      :list,
      Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfAssigneesInner
    )
    |> Deserializer.deserialize(
      :ball_in_court,
      :struct,
      Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee
    )
    |> Deserializer.deserialize(
      :ball_in_courts,
      :list,
      Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee
    )
    |> Deserializer.deserialize(:cost_code, :struct, Procore.Model.TimecardEntryFullCostCode)
    |> Deserializer.deserialize(
      :cost_impact,
      :struct,
      Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfCostImpact
    )
    |> Deserializer.deserialize(:created_at, :datetime, nil)
    |> Deserializer.deserialize(:deleted_at, :datetime, nil)
    |> Deserializer.deserialize(:due_date, :date, nil)
    |> Deserializer.deserialize(:initiated_at, :datetime, nil)
    |> Deserializer.deserialize(:location, :struct, Procore.Model.Location)
    |> Deserializer.deserialize(
      :project_stage,
      :struct,
      Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfProjectStage
    )
    |> Deserializer.deserialize(
      :received_from,
      :struct,
      Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee
    )
    |> Deserializer.deserialize(
      :responsible_contractor,
      :struct,
      Procore.Model.RestV10ProjectsProjectIdWasteLogsGet200ResponseInnerVendor
    )
    |> Deserializer.deserialize(
      :rfi_manager,
      :struct,
      Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee
    )
    |> Deserializer.deserialize(
      :schedule_impact,
      :struct,
      Procore.Model.RestV10ProjectsProjectIdRfisGet200ResponseInnerAllOfScheduleImpact
    )
    |> Deserializer.deserialize(:sub_job, :struct, Procore.Model.TimecardEntry3SubJob)
    |> Deserializer.deserialize(:time_resolved, :datetime, nil)
    |> Deserializer.deserialize(:updated_at, :datetime, nil)
  end
end
