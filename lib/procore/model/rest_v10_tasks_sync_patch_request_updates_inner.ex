# NOTE: This file is auto generated by OpenAPI Generator 7.9.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.RestV10TasksSyncPatchRequestUpdatesInner do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :name,
    :start,
    :finish,
    :actual_start,
    :actual_finish,
    :percentage,
    :critical_path,
    :milestone,
    :row_number,
    :has_children,
    :source_uid,
    :parent_id,
    :full_outline_path,
    :activity_id,
    :wbs,
    :schedule_duration,
    :resource_ids,
    :notes,
    :baseline_start,
    :baseline_finish,
    :start_variance,
    :finish_variance,
    :manually_edited
  ]

  @type t :: %__MODULE__{
          :name => String.t() | nil,
          :start => DateTime.t() | nil,
          :finish => DateTime.t() | nil,
          :actual_start => DateTime.t() | nil,
          :actual_finish => DateTime.t() | nil,
          :percentage => integer() | nil,
          :critical_path => boolean() | nil,
          :milestone => boolean() | nil,
          :row_number => integer() | nil,
          :has_children => boolean() | nil,
          :source_uid => String.t() | nil,
          :parent_id => integer() | nil,
          :full_outline_path => String.t() | nil,
          :activity_id => String.t() | nil,
          :wbs => String.t() | nil,
          :schedule_duration => float() | nil,
          :resource_ids => [integer()] | nil,
          :notes => String.t() | nil,
          :baseline_start => DateTime.t() | nil,
          :baseline_finish => DateTime.t() | nil,
          :start_variance => float() | nil,
          :finish_variance => float() | nil,
          :manually_edited => boolean() | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:start, :datetime, nil)
    |> Deserializer.deserialize(:finish, :datetime, nil)
    |> Deserializer.deserialize(:actual_start, :datetime, nil)
    |> Deserializer.deserialize(:actual_finish, :datetime, nil)
    |> Deserializer.deserialize(:baseline_start, :datetime, nil)
    |> Deserializer.deserialize(:baseline_finish, :datetime, nil)
  end
end
