# NOTE: This file is auto generated by OpenAPI Generator 7.9.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.ExtendedView2 do
  @moduledoc """
  Project Person
  """

  @derive Jason.Encoder
  defstruct [
    :contact,
    :employee_id,
    :first_name,
    :id,
    :is_employee,
    :last_name,
    :user_id,
    :user_uuid,
    :work_classification_id,
    :origin_id,
    :work_classification,
    :vendor
  ]

  @type t :: %__MODULE__{
          :contact => Procore.Model.NormalContact.t() | nil,
          :employee_id => String.t() | nil,
          :first_name => String.t() | nil,
          :id => integer() | nil,
          :is_employee => boolean() | nil,
          :last_name => String.t() | nil,
          :user_id => integer() | nil,
          :user_uuid => integer() | nil,
          :work_classification_id => integer() | nil,
          :origin_id => integer() | nil,
          :work_classification => Procore.Model.ExtendedViewWorkClassification.t() | nil,
          :vendor => Procore.Model.Compact.t() | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:contact, :struct, Procore.Model.NormalContact)
    |> Deserializer.deserialize(
      :work_classification,
      :struct,
      Procore.Model.ExtendedViewWorkClassification
    )
    |> Deserializer.deserialize(:vendor, :struct, Procore.Model.Compact)
  end
end
