# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.IncidentNormal do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :created_at,
    :deleted_at,
    :description,
    :event_date,
    :number,
    :private,
    :recordable,
    :records_count,
    :open_observations_count,
    :closed_observations_count,
    :actions_count,
    :witness_statements_count,
    :status,
    :time_unknown,
    :title,
    :updated_at,
    :created_by,
    :contributing_behavior,
    :contributing_condition,
    :hazard,
    :location,
    :attachments_count,
    :custom_fields,
    :attachments,
    :distribution_members,
    :environmentals,
    :injuries,
    :near_misses,
    :property_damages,
    :witness_statements,
    :actions
  ]

  @type t :: %__MODULE__{
          :id => integer() | nil,
          :created_at => DateTime.t() | nil,
          :deleted_at => DateTime.t() | nil,
          :description => String.t() | nil,
          :event_date => DateTime.t() | nil,
          :number => integer() | nil,
          :private => boolean() | nil,
          :recordable => boolean() | nil,
          :records_count => integer() | nil,
          :open_observations_count => integer() | nil,
          :closed_observations_count => integer() | nil,
          :actions_count => integer() | nil,
          :witness_statements_count => integer() | nil,
          :status => String.t() | nil,
          :time_unknown => boolean() | nil,
          :title => String.t() | nil,
          :updated_at => DateTime.t() | nil,
          :created_by =>
            Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee.t() | nil,
          :contributing_behavior => Procore.Model.ContributingBehavior1.t() | nil,
          :contributing_condition => Procore.Model.ContributingCondition1.t() | nil,
          :hazard => Procore.Model.Hazard1.t() | nil,
          :location => Procore.Model.Location6.t() | nil,
          :attachments_count => integer() | nil,
          :custom_fields =>
            Procore.Model.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet200ResponseInnerCustomFields.t()
            | nil,
          :attachments => [Procore.Model.IncidentAttachment.t()] | nil,
          :distribution_members =>
            [Procore.Model.RestV10ProjectsProjectIdWorkLogsGet200ResponseInnerCreatedBy.t()] | nil,
          :environmentals => [Procore.Model.IncidentNormalAllOfEnvironmentalsInner.t()] | nil,
          :injuries => [Procore.Model.IncidentNormalAllOfInjuriesInner.t()] | nil,
          :near_misses => [Procore.Model.IncidentNormalAllOfNearMissesInner.t()] | nil,
          :property_damages => [Procore.Model.IncidentNormalAllOfPropertyDamagesInner.t()] | nil,
          :witness_statements =>
            [Procore.Model.IncidentNormalAllOfWitnessStatementsInner.t()] | nil,
          :actions => [Procore.Model.IncidentNormalAllOfActionsInner.t()] | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:created_at, :datetime, nil)
    |> Deserializer.deserialize(:deleted_at, :datetime, nil)
    |> Deserializer.deserialize(:event_date, :datetime, nil)
    |> Deserializer.deserialize(:updated_at, :datetime, nil)
    |> Deserializer.deserialize(
      :created_by,
      :struct,
      Procore.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee
    )
    |> Deserializer.deserialize(
      :contributing_behavior,
      :struct,
      Procore.Model.ContributingBehavior1
    )
    |> Deserializer.deserialize(
      :contributing_condition,
      :struct,
      Procore.Model.ContributingCondition1
    )
    |> Deserializer.deserialize(:hazard, :struct, Procore.Model.Hazard1)
    |> Deserializer.deserialize(:location, :struct, Procore.Model.Location6)
    |> Deserializer.deserialize(
      :custom_fields,
      :struct,
      Procore.Model.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet200ResponseInnerCustomFields
    )
    |> Deserializer.deserialize(:attachments, :list, Procore.Model.IncidentAttachment)
    |> Deserializer.deserialize(
      :distribution_members,
      :list,
      Procore.Model.RestV10ProjectsProjectIdWorkLogsGet200ResponseInnerCreatedBy
    )
    |> Deserializer.deserialize(
      :environmentals,
      :list,
      Procore.Model.IncidentNormalAllOfEnvironmentalsInner
    )
    |> Deserializer.deserialize(:injuries, :list, Procore.Model.IncidentNormalAllOfInjuriesInner)
    |> Deserializer.deserialize(
      :near_misses,
      :list,
      Procore.Model.IncidentNormalAllOfNearMissesInner
    )
    |> Deserializer.deserialize(
      :property_damages,
      :list,
      Procore.Model.IncidentNormalAllOfPropertyDamagesInner
    )
    |> Deserializer.deserialize(
      :witness_statements,
      :list,
      Procore.Model.IncidentNormalAllOfWitnessStatementsInner
    )
    |> Deserializer.deserialize(:actions, :list, Procore.Model.IncidentNormalAllOfActionsInner)
  end
end
