# NOTE: This file is auto generated by OpenAPI Generator 7.9.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.RestV10BimPlansGet200ResponseInner do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :bim_level_id,
    :drawing_id,
    :created_at,
    :updated_at,
    :title,
    :image,
    :thumbnail,
    :sheet_map_start,
    :sheet_map_end,
    :model_map_start,
    :model_map_end
  ]

  @type t :: %__MODULE__{
          :id => integer() | nil,
          :bim_level_id => integer() | nil,
          :drawing_id => integer() | nil,
          :created_at => DateTime.t() | nil,
          :updated_at => DateTime.t() | nil,
          :title => String.t() | nil,
          :image => Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfImage.t() | nil,
          :thumbnail => Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfThumbnail.t() | nil,
          :sheet_map_start =>
            Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfSheetMapStart.t() | nil,
          :sheet_map_end =>
            Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfSheetMapStart.t() | nil,
          :model_map_start =>
            Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfModelMapStart.t() | nil,
          :model_map_end =>
            Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfModelMapStart.t() | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:created_at, :datetime, nil)
    |> Deserializer.deserialize(:updated_at, :datetime, nil)
    |> Deserializer.deserialize(
      :image,
      :struct,
      Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfImage
    )
    |> Deserializer.deserialize(
      :thumbnail,
      :struct,
      Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfThumbnail
    )
    |> Deserializer.deserialize(
      :sheet_map_start,
      :struct,
      Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfSheetMapStart
    )
    |> Deserializer.deserialize(
      :sheet_map_end,
      :struct,
      Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfSheetMapStart
    )
    |> Deserializer.deserialize(
      :model_map_start,
      :struct,
      Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfModelMapStart
    )
    |> Deserializer.deserialize(
      :model_map_end,
      :struct,
      Procore.Model.RestV10BimPlansGet200ResponseInnerAllOfModelMapStart
    )
  end
end
