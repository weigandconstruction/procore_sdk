# NOTE: This file is auto generated by OpenAPI Generator 7.9.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.ArrayOfProjectsErrorsInner do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :logo_url,
    :name,
    :display_name,
    :project_number,
    :address,
    :city,
    :state_code,
    :country_code,
    :zip,
    :time_zone,
    :tz_name,
    :latitude,
    :longitude,
    :county,
    :parent_job_id,
    :description,
    :square_feet,
    :start_date,
    :completion_date,
    :total_value,
    :store_number,
    :accounting_project_number,
    :designated_market_area,
    :warranty_start_date,
    :warranty_end_date,
    :active,
    :flag,
    :phone,
    :public_notes,
    :actual_start_date,
    :projected_finish_date,
    :created_at,
    :updated_at,
    :origin_id,
    :origin_data,
    :origin_code,
    :standard_cost_code_list_id,
    :owners_project_id,
    :photo_id,
    :inbound_email,
    :estimated_start_date,
    :estimated_completion_date,
    :estimated_value,
    :persistent_message,
    :office,
    :project_bid_type,
    :project_owner_type,
    :project_region,
    :project_stage,
    :project_type,
    :program,
    :departments,
    :company,
    :custom_fields,
    :errors
  ]

  @type t :: %__MODULE__{
          :id => integer() | nil,
          :logo_url => String.t() | nil,
          :name => String.t() | nil,
          :display_name => String.t() | nil,
          :project_number => String.t() | nil,
          :address => String.t() | nil,
          :city => String.t() | nil,
          :state_code => String.t() | nil,
          :country_code => String.t() | nil,
          :zip => String.t() | nil,
          :time_zone => String.t() | nil,
          :tz_name => String.t() | nil,
          :latitude => float() | nil,
          :longitude => float() | nil,
          :county => String.t() | nil,
          :parent_job_id => integer() | nil,
          :description => String.t() | nil,
          :square_feet => integer() | nil,
          :start_date => Date.t() | nil,
          :completion_date => Date.t() | nil,
          :total_value => float() | nil,
          :store_number => String.t() | nil,
          :accounting_project_number => String.t() | nil,
          :designated_market_area => String.t() | nil,
          :warranty_start_date => Date.t() | nil,
          :warranty_end_date => Date.t() | nil,
          :active => boolean() | nil,
          :flag => String.t() | nil,
          :phone => String.t() | nil,
          :public_notes => String.t() | nil,
          :actual_start_date => Date.t() | nil,
          :projected_finish_date => Date.t() | nil,
          :created_at => DateTime.t() | nil,
          :updated_at => DateTime.t() | nil,
          :origin_id => String.t() | nil,
          :origin_data => String.t() | nil,
          :origin_code => String.t() | nil,
          :standard_cost_code_list_id => integer() | nil,
          :owners_project_id => integer() | nil,
          :photo_id => integer() | nil,
          :inbound_email => String.t() | nil,
          :estimated_start_date => Date.t() | nil,
          :estimated_completion_date => Date.t() | nil,
          :estimated_value => float() | nil,
          :persistent_message => Procore.Model.ProjectPersistentMessage2.t() | nil,
          :office => Procore.Model.ProjectOffice3.t() | nil,
          :project_bid_type => Procore.Model.ProjectBidType1.t() | nil,
          :project_owner_type => Procore.Model.ProjectOwnerType1.t() | nil,
          :project_region => Procore.Model.ProjectRegion1.t() | nil,
          :project_stage => Procore.Model.ProjectStage.t() | nil,
          :project_type => Procore.Model.ProjectType1.t() | nil,
          :program => Procore.Model.ProjectProgram1.t() | nil,
          :departments => [Procore.Model.ProjectDepartment1.t()] | nil,
          :company => Procore.Model.ProjectCompany2.t() | nil,
          :custom_fields =>
            Procore.Model.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet200ResponseInnerCustomFields.t()
            | nil,
          :errors =>
            Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemsSyncPatch200ResponseErrorsInnerAllOfErrors.t()
            | nil
        }

  alias Procore.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:start_date, :date, nil)
    |> Deserializer.deserialize(:completion_date, :date, nil)
    |> Deserializer.deserialize(:warranty_start_date, :date, nil)
    |> Deserializer.deserialize(:warranty_end_date, :date, nil)
    |> Deserializer.deserialize(:actual_start_date, :date, nil)
    |> Deserializer.deserialize(:projected_finish_date, :date, nil)
    |> Deserializer.deserialize(:created_at, :datetime, nil)
    |> Deserializer.deserialize(:updated_at, :datetime, nil)
    |> Deserializer.deserialize(:estimated_start_date, :date, nil)
    |> Deserializer.deserialize(:estimated_completion_date, :date, nil)
    |> Deserializer.deserialize(
      :persistent_message,
      :struct,
      Procore.Model.ProjectPersistentMessage2
    )
    |> Deserializer.deserialize(:office, :struct, Procore.Model.ProjectOffice3)
    |> Deserializer.deserialize(:project_bid_type, :struct, Procore.Model.ProjectBidType1)
    |> Deserializer.deserialize(:project_owner_type, :struct, Procore.Model.ProjectOwnerType1)
    |> Deserializer.deserialize(:project_region, :struct, Procore.Model.ProjectRegion1)
    |> Deserializer.deserialize(:project_stage, :struct, Procore.Model.ProjectStage)
    |> Deserializer.deserialize(:project_type, :struct, Procore.Model.ProjectType1)
    |> Deserializer.deserialize(:program, :struct, Procore.Model.ProjectProgram1)
    |> Deserializer.deserialize(:departments, :list, Procore.Model.ProjectDepartment1)
    |> Deserializer.deserialize(:company, :struct, Procore.Model.ProjectCompany2)
    |> Deserializer.deserialize(
      :custom_fields,
      :struct,
      Procore.Model.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet200ResponseInnerCustomFields
    )
    |> Deserializer.deserialize(
      :errors,
      :struct,
      Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemsSyncPatch200ResponseErrorsInnerAllOfErrors
    )
  end
end
