# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Model.RestV10PrimeContractsPrimeContractIdPaymentApplicationMarkupLineItemsIdPatch200Response do
  @moduledoc """
  Payment Application (Owner Invoice) Markup Line Item.
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :balance_to_finish,
    :work_completed_from_previous_application,
    :total_completed_and_stored_to_date_percent,
    :total_completed_and_stored_to_date,
    :work_completed_this_period,
    :type,
    :description_of_work,
    :materials_presently_stored,
    :work_completed_retainage_currently_retained,
    :work_completed_retainage_from_previous_application,
    :work_completed_retainage_released_this_period,
    :work_completed_retainage_retained_this_period,
    :work_completed_retainage_percent_this_period,
    :total_retainage_currently_retained,
    :total_retainage_from_previous_application
  ]

  @type t :: %__MODULE__{
          :id => integer() | nil,
          :balance_to_finish => String.t() | nil,
          :work_completed_from_previous_application => String.t() | nil,
          :total_completed_and_stored_to_date_percent => String.t() | nil,
          :total_completed_and_stored_to_date => String.t() | nil,
          :work_completed_this_period => String.t() | nil,
          :type => String.t() | nil,
          :description_of_work => String.t() | nil,
          :materials_presently_stored => String.t() | nil,
          :work_completed_retainage_currently_retained => String.t() | nil,
          :work_completed_retainage_from_previous_application => String.t() | nil,
          :work_completed_retainage_released_this_period => String.t() | nil,
          :work_completed_retainage_retained_this_period => String.t() | nil,
          :work_completed_retainage_percent_this_period => String.t() | nil,
          :total_retainage_currently_retained => String.t() | nil,
          :total_retainage_from_previous_application => String.t() | nil
        }

  def decode(value) do
    value
  end
end
