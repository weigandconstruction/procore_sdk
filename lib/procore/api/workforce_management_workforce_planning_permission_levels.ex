# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.WorkforceManagementWorkforcePlanningPermissionLevels do
  @moduledoc """
  API calls for all endpoints tagged `WorkforceManagementWorkforcePlanningPermissionLevels`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  Get Permission Level Options
  Retrieves a list of all available permission level options within a company. The `id` field in the response represents the UUID to be used for `permission_level_id` in API calls related to user permissions. 

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (integer()): Unique identifier for the company. NOTE - this is a Laborchart company ID
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%RestV10WorkforcePlanningV2CompaniesCompanyIdPermissionLevelOptionsGet200ResponseInner{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_workforce_planning_v2_companies_company_id_permission_level_options_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok,
           [
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdPermissionLevelOptionsGet200ResponseInner.t()
           ]}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_workforce_planning_v2_companies_company_id_permission_level_options_get(
        connection,
        procore_company_id,
        company_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:get)
      |> url("/rest/v1.0/workforce_planning/v2/companies/#{company_id}/permission-level-options")
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdPermissionLevelOptionsGet200ResponseInner},
      {400,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response},
      {401,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response}
    ])
  end
end
