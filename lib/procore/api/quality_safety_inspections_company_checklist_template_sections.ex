# NOTE: This file is auto generated by OpenAPI Generator 7.9.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.QualitySafetyInspectionsCompanyChecklistTemplateSections do
  @moduledoc """
  API calls for all endpoints tagged `QualitySafetyInspectionsCompanyChecklistTemplateSections`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  List Company Checklist Template Sections
  Returns a collection of Checklist Sections for a specified Checklist Template.

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (integer()): Unique identifier for the company.
  - `list_template_id` (integer()): The ID of the Checklist Template
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%CompanyChecklistSection{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_companies_company_id_checklist_list_templates_list_template_id_sections_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok, [Procore.Model.CompanyChecklistSection.t()]}
          | {:error, Tesla.Env.t()}
  def rest_v10_companies_company_id_checklist_list_templates_list_template_id_sections_get(
        connection,
        procore_company_id,
        company_id,
        list_template_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:get)
      |> url(
        "/rest/v1.0/companies/#{company_id}/checklist/list_templates/#{list_template_id}/sections"
      )
      |> add_param(:headers, "Procore-Company-Id", procore_company_id)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Procore.Model.CompanyChecklistSection},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end

  @doc """
  Create Company Checklist Template Section
  Creates a Company Checklist Section for a specified Checklist Template.

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (integer()): Unique identifier for the company.
  - `list_template_id` (integer()): The ID of the Checklist Template
  - `company_checklist_section_create_body` (CompanyChecklistSectionCreateBody): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Procore.Model.CompanyChecklistSection.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_companies_company_id_checklist_list_templates_list_template_id_sections_post(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          Procore.Model.CompanyChecklistSectionCreateBody.t(),
          keyword()
        ) ::
          {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok, Procore.Model.CompanyChecklistSection.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_companies_company_id_checklist_list_templates_list_template_id_sections_post(
        connection,
        procore_company_id,
        company_id,
        list_template_id,
        company_checklist_section_create_body,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/rest/v1.0/companies/#{company_id}/checklist/list_templates/#{list_template_id}/sections"
      )
      |> add_param(:headers, "Procore-Company-Id", procore_company_id)
      |> add_param(:body, :body, company_checklist_section_create_body)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {201, Procore.Model.CompanyChecklistSection},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end
end
