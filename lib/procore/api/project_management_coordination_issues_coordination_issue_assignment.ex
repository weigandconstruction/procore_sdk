# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.ProjectManagementCoordinationIssuesCoordinationIssueAssignment do
  @moduledoc """
  API calls for all endpoints tagged `ProjectManagementCoordinationIssuesCoordinationIssueAssignment`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  Create Coordination Issue Assignment
  Create a Coordination Issue Assignment, which executes a series of actions that updates coordination issue assignee_id and creates an instance of CoordinationIssueActivity.

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `coordination_issue_id` (integer()): Coordination Issue ID
  - `rest_v10_coordination_issues_coordination_issue_id_assignments_post_request` (RestV10CoordinationIssuesCoordinationIssueIdAssignmentsPostRequest): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Procore.Model.RestV10CoordinationIssuesCoordinationIssueIdAssignmentsPost201Response.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_coordination_issues_coordination_issue_id_assignments_post(
          Tesla.Env.client(),
          integer(),
          integer(),
          Procore.Model.RestV10CoordinationIssuesCoordinationIssueIdAssignmentsPostRequest.t(),
          keyword()
        ) ::
          {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok,
             Procore.Model.RestV10CoordinationIssuesCoordinationIssueIdAssignmentsPost201Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_coordination_issues_coordination_issue_id_assignments_post(
        connection,
        procore_company_id,
        coordination_issue_id,
        rest_v10_coordination_issues_coordination_issue_id_assignments_post_request,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/rest/v1.0/coordination_issues/#{coordination_issue_id}/assignments")
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(
        :body,
        :body,
        rest_v10_coordination_issues_coordination_issue_id_assignments_post_request
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {201, Procore.Model.RestV10CoordinationIssuesCoordinationIssueIdAssignmentsPost201Response},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {:default, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end
end
