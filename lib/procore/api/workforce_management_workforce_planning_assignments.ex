# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.WorkforceManagementWorkforcePlanningAssignments do
  @moduledoc """
  API calls for all endpoints tagged `WorkforceManagementWorkforcePlanningAssignments`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  Get Current Company Assignments
  Returns all of the current Workforce Planning Assignment data for the given company

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (integer()): Unique identifier for the company. NOTE - this is a Laborchart company ID
  - `opts` (keyword): Optional parameters
    - `:page` (integer()): This is a **0-based index** representing the page slice of the data you want to retrieve. Each page contains up to **400 items**. ### **ðŸ“Œ Pageable Endpoints** People endpoints that return multiple records **support pagination**. It is recommended to use this feature to prevent network timeouts from excessively large data requests. ### **ðŸ“Œ Response Structure** A successful response will include the following properties: - **`possible_pages`** *(integer)* â†’ Total number of pages available to retrieve all data. - **`current_page`** *(integer)* â†’ The **0-based index** of the page retrieved. - **`data`** *(array)* â†’ List of records returned for the requested page (up to 400 items per page). If a **page value exceeds** `possible_pages`, the `data` property will return an **empty array**. 

  ### Returns

  - `{:ok, [%RestV10WorkforcePlanningV2CompaniesCompanyIdAssignmentsGet200ResponseInner{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_workforce_planning_v2_companies_company_id_assignments_current_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok,
           Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response.t()}
          | {:ok,
             [
               Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdAssignmentsGet200ResponseInner.t()
             ]}
          | {:error, Tesla.Env.t()}
  def rest_v10_workforce_planning_v2_companies_company_id_assignments_current_get(
        connection,
        procore_company_id,
        company_id,
        opts \\ []
      ) do
    optional_params = %{
      :page => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/rest/v1.0/workforce_planning/v2/companies/#{company_id}/assignments/current")
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdAssignmentsGet200ResponseInner},
      {400,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response},
      {401,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response},
      {403, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response},
      {404, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response}
    ])
  end

  @doc """
  Get Company Assignments
  Returns all of the Workforce Planning Assignment data for the given company

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (integer()): Unique identifier for the company. NOTE - this is a Laborchart company ID
  - `day_range` (String.t): A value specifying how many days forward you would like to get assignments for from the specified startDay. Assignments whose start_day falls within the given range will be returned in the response. The startDay parameter in conjunction with the dayRange parameter will create a range of dates that will filter each assignment based on its start_day field. For example, passing in a startDay of 2024-01-01 and a dayRange of 1 will return all assignments that begin on either the 1st or 2nd of January. If we pass in the same startDay, but with a dayRange of 15, the results will include all assignments whose start_day exists between the dates of 2024-01-01 and 2024-01-15. Max value is 365. 
  - `start_day` (String.t): The starting day to filter assignments by.
  - `opts` (keyword): Optional parameters
    - `:created_after` (Date.t): Filters items created on or after the specified date (inclusive). Accepts an ISO 8601 date string. 
    - `:created_at` (Date.t): Filters items based on their creation timestamp. Accepts an ISO 8601 date string. 
    - `:created_before` (Date.t): Filters items created on or before the specified date (inclusive). Accepts an ISO 8601 date string. 
    - `:page` (integer()): This is a **0-based index** representing the page slice of the data you want to retrieve. Each page contains up to **400 items**. ### **ðŸ“Œ Pageable Endpoints** People endpoints that return multiple records **support pagination**. It is recommended to use this feature to prevent network timeouts from excessively large data requests. ### **ðŸ“Œ Response Structure** A successful response will include the following properties: - **`possible_pages`** *(integer)* â†’ Total number of pages available to retrieve all data. - **`current_page`** *(integer)* â†’ The **0-based index** of the page retrieved. - **`data`** *(array)* â†’ List of records returned for the requested page (up to 400 items per page). If a **page value exceeds** `possible_pages`, the `data` property will return an **empty array**. 
    - `:updated_after` (Date.t): Filters items updated on or after the specified date (inclusive). Accepts an ISO 8601 date string. 
    - `:updated_at` (Date.t): Filters items based on their last updated timestamp. Accepts an ISO 8601 date string. 
    - `:updated_before` (Date.t): Filters items updated on or before the specified date (inclusive). Accepts an ISO 8601 date string. 

  ### Returns

  - `{:ok, [%RestV10WorkforcePlanningV2CompaniesCompanyIdAssignmentsGet200ResponseInner{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_workforce_planning_v2_companies_company_id_assignments_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response.t()}
          | {:ok,
             [
               Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdAssignmentsGet200ResponseInner.t()
             ]}
          | {:error, Tesla.Env.t()}
  def rest_v10_workforce_planning_v2_companies_company_id_assignments_get(
        connection,
        procore_company_id,
        company_id,
        day_range,
        start_day,
        opts \\ []
      ) do
    optional_params = %{
      :created_after => :query,
      :created_at => :query,
      :created_before => :query,
      :page => :query,
      :updated_after => :query,
      :updated_at => :query,
      :updated_before => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/rest/v1.0/workforce_planning/v2/companies/#{company_id}/assignments")
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:query, :dayRange, day_range)
      |> add_param(:query, :start_day, start_day)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdAssignmentsGet200ResponseInner},
      {400,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response},
      {401,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response},
      {403, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response},
      {404, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response}
    ])
  end

  @doc """
  Get Group Assignments
  Returns the Workforce Planning Assignment data for the given company and group

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (integer()): Unique identifier for the company. NOTE - this is a Laborchart company ID
  - `group_id` (integer()): Unique identifier for the group
  - `day_range` (String.t): A value specifying how many days forward you would like to get assignments for from the specified startDay. Assignments whose start_day falls within the given range will be returned in the response. The startDay parameter in conjunction with the dayRange parameter will create a range of dates that will filter each assignment based on its start_day field. For example, passing in a startDay of 2024-01-01 and a dayRange of 1 will return all assignments that begin on either the 1st or 2nd of January. If we pass in the same startDay, but with a dayRange of 15, the results will include all assignments whose start_day exists between the dates of 2024-01-01 and 2024-01-15. Max value is 365. 
  - `start_day` (String.t): The starting day to filter assignments by.
  - `opts` (keyword): Optional parameters
    - `:page` (integer()): This is a **0-based index** representing the page slice of the data you want to retrieve. Each page contains up to **400 items**. ### **ðŸ“Œ Pageable Endpoints** People endpoints that return multiple records **support pagination**. It is recommended to use this feature to prevent network timeouts from excessively large data requests. ### **ðŸ“Œ Response Structure** A successful response will include the following properties: - **`possible_pages`** *(integer)* â†’ Total number of pages available to retrieve all data. - **`current_page`** *(integer)* â†’ The **0-based index** of the page retrieved. - **`data`** *(array)* â†’ List of records returned for the requested page (up to 400 items per page). If a **page value exceeds** `possible_pages`, the `data` property will return an **empty array**. 

  ### Returns

  - `{:ok, [%RestV10WorkforcePlanningV2CompaniesCompanyIdAssignmentsGet200ResponseInner{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_workforce_planning_v2_companies_company_id_groups_group_id_assignments_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response.t()}
          | {:ok,
             [
               Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdAssignmentsGet200ResponseInner.t()
             ]}
          | {:error, Tesla.Env.t()}
  def rest_v10_workforce_planning_v2_companies_company_id_groups_group_id_assignments_get(
        connection,
        procore_company_id,
        company_id,
        group_id,
        day_range,
        start_day,
        opts \\ []
      ) do
    optional_params = %{
      :page => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/rest/v1.0/workforce_planning/v2/companies/#{company_id}/groups/#{group_id}/assignments"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:query, :dayRange, day_range)
      |> add_param(:query, :start_day, start_day)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdAssignmentsGet200ResponseInner},
      {400,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response},
      {401,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response},
      {403, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response},
      {404, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response}
    ])
  end

  @doc """
  Get Person Assignments
  Returns the Workforce Planning Assignment data for the given company and person

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (integer()): Unique identifier for the company. NOTE - this is a Laborchart company ID
  - `person_id` (integer()): Unique identifier for the person
  - `day_range` (String.t): A value specifying how many days forward you would like to get assignments for from the specified startDay. Assignments whose start_day falls within the given range will be returned in the response. The startDay parameter in conjunction with the dayRange parameter will create a range of dates that will filter each assignment based on its start_day field. For example, passing in a startDay of 2024-01-01 and a dayRange of 1 will return all assignments that begin on either the 1st or 2nd of January. If we pass in the same startDay, but with a dayRange of 15, the results will include all assignments whose start_day exists between the dates of 2024-01-01 and 2024-01-15. Max value is 365. 
  - `start_day` (String.t): The starting day to filter assignments by.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%RestV10WorkforcePlanningV2CompaniesCompanyIdPeoplePersonIdAssignmentsGet200ResponseInner{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_workforce_planning_v2_companies_company_id_people_person_id_assignments_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response.t()}
          | {:ok,
             [
               Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdPeoplePersonIdAssignmentsGet200ResponseInner.t()
             ]}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_workforce_planning_v2_companies_company_id_people_person_id_assignments_get(
        connection,
        procore_company_id,
        company_id,
        person_id,
        day_range,
        start_day,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:get)
      |> url(
        "/rest/v1.0/workforce_planning/v2/companies/#{company_id}/people/#{person_id}/assignments"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:query, :dayRange, day_range)
      |> add_param(:query, :start_day, start_day)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdPeoplePersonIdAssignmentsGet200ResponseInner},
      {400,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response},
      {401,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response},
      {403, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response},
      {404, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response}
    ])
  end

  @doc """
  Get Project Assignments
  Returns the Workforce Planning Assignment data for the given company and project

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (integer()): Unique identifier for the company. NOTE - this is a Laborchart company ID
  - `project_id` (integer()): Unique identifier for the project
  - `day_range` (String.t): A value specifying how many days forward you would like to get assignments for from the specified startDay. Assignments whose start_day falls within the given range will be returned in the response. The startDay parameter in conjunction with the dayRange parameter will create a range of dates that will filter each assignment based on its start_day field. For example, passing in a startDay of 2024-01-01 and a dayRange of 1 will return all assignments that begin on either the 1st or 2nd of January. If we pass in the same startDay, but with a dayRange of 15, the results will include all assignments whose start_day exists between the dates of 2024-01-01 and 2024-01-15. Max value is 365. 
  - `start_day` (String.t): The starting day to filter assignments by.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsProjectIdAssignmentsGet200ResponseInner{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_workforce_planning_v2_companies_company_id_projects_project_id_assignments_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response.t()}
          | {:ok,
             [
               Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsProjectIdAssignmentsGet200ResponseInner.t()
             ]}
          | {:ok,
             Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_workforce_planning_v2_companies_company_id_projects_project_id_assignments_get(
        connection,
        procore_company_id,
        company_id,
        project_id,
        day_range,
        start_day,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:get)
      |> url(
        "/rest/v1.0/workforce_planning/v2/companies/#{company_id}/projects/#{project_id}/assignments"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:query, :dayRange, day_range)
      |> add_param(:query, :start_day, start_day)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsProjectIdAssignmentsGet200ResponseInner},
      {400,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet400Response},
      {401,
       Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdGroupsGroupIdReportsLookAheadGet401Response},
      {403, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet403Response},
      {404, Procore.Model.RestV10WorkforcePlanningV2CompaniesCompanyIdProjectsGet404Response}
    ])
  end
end
