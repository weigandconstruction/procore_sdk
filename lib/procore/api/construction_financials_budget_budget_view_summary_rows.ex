# NOTE: This file is auto generated by OpenAPI Generator 7.7.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.ConstructionFinancialsBudgetBudgetViewSummaryRows do
  @moduledoc """
  API calls for all endpoints tagged `ConstructionFinancialsBudgetBudgetViewSummaryRows`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  List Budget View Summary Rows
  Return a list of all Budget View Summary Rows for a project and budget view. The type of row returned is dependent on the value used in the group_by query param.  Note: In addition to all the fields outlined in the response, there will be an additional key for each visible source and formula column created for the particular budget view.

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `budget_view_id` (integer()): Budget View ID
  - `project_id` (integer()): Unique identifier for the project.
  - `opts` (keyword): Optional parameters
    - `:page` (integer()): Page
    - `:per_page` (integer()): Elements per page
    - `:"biller[]"` ([String.t]): Return item(s) within a specific biller. Format is biller[]=id=1,type=SubJob or biller[]=id=1,type=Project
    - `:"cost_code_id[]"` ([integer()]): Return item(s) within a specific Cost Code id or range of Cost Code IDs
    - `:"cost_code_name[]"` ([String.t]): Return item(s) within a specific Cost Code name or range of Cost Code names
    - `:"root_cost_code_id[]"` ([integer()]): Return item(s) within a specific Root Cost Code id or range of Root Cost Code IDs
    - `:"root_cost_code_name[]"` ([String.t]): Return item(s) within a specific Root Cost Code name or range of Root Cost Code names
    - `:"category_id[]"` ([integer()]): Return item(s) within a specific category id (line item type id) or range of category IDs
    - `:"budget_line_item_id[]"` ([integer()]): Return item(s) within a specific budget line item id or range of budget line item IDs
    - `:group_by` (String.t): Groups the data. Value can be a comma separated string. Default is biller,root_cost_code
    - `:budget_row_type` (String.t): Return budgeted, unbudgeted or all item(s) from all budget rows for a project. Default is budgeted. Note that when the unbudgeted or all values are supplied, the subtotals may change depending on the presence of rows that have budgeted false

  ### Returns

  - `{:ok, [%RestV10BudgetViewsBudgetViewIdSummaryRowsGet200ResponseInner{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_budget_views_budget_view_id_summary_rows_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok,
             list(Procore.Model.RestV10BudgetViewsBudgetViewIdSummaryRowsGet200ResponseInner.t())}
          | {:error, Tesla.Env.t()}
  def rest_v10_budget_views_budget_view_id_summary_rows_get(
        connection,
        procore_company_id,
        budget_view_id,
        project_id,
        opts \\ []
      ) do
    optional_params = %{
      :page => :query,
      :per_page => :query,
      :"biller[]" => :query,
      :"cost_code_id[]" => :query,
      :"cost_code_name[]" => :query,
      :"root_cost_code_id[]" => :query,
      :"root_cost_code_name[]" => :query,
      :"category_id[]" => :query,
      :"budget_line_item_id[]" => :query,
      :group_by => :query,
      :budget_row_type => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/rest/v1.0/budget_views/#{budget_view_id}/summary_rows")
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:query, :project_id, project_id)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Procore.Model.RestV10BudgetViewsBudgetViewIdSummaryRowsGet200ResponseInner},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {:default, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end
end
