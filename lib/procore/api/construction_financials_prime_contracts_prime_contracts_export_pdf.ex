# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.ConstructionFinancialsPrimeContractsPrimeContractsExportPDF do
  @moduledoc """
  API calls for all endpoints tagged `ConstructionFinancialsPrimeContractsPrimeContractsExportPDF`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  Check PDF generation status
  Check the status of a PDF document generation for a prime contract. Note: This endpoint is currently only supported in Procore Zones US01 && US02.

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (String.t): Unique identifier for the company.
  - `project_id` (String.t): Unique identifier for the project.
  - `prime_contract_id` (String.t): Unique identifier for the Prime Contract.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v20_companies_company_id_projects_project_id_prime_contracts_prime_contract_id_pdf_get(
          Tesla.Env.client(),
          integer(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, Procore.Model.RestV20CompaniesCompanyIdWorkflowsToolsGet401Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v20_companies_company_id_projects_project_id_prime_contracts_prime_contract_id_pdf_get(
        connection,
        procore_company_id,
        company_id,
        project_id,
        prime_contract_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:get)
      |> url(
        "/rest/v2.0/companies/#{company_id}/projects/#{project_id}/prime_contracts/#{prime_contract_id}/pdf"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false},
      {302, false},
      {400, Procore.Model.RestV20CompaniesCompanyIdWorkflowsToolsGet401Response},
      {404, Procore.Model.RestV20CompaniesCompanyIdWorkflowsToolsGet401Response}
    ])
  end

  @doc """
  Create PDF export for a Prime Contract
  Creates a PDF export for a given Prime Contract. Note: This endpoint is currently only supported in Procore Zones US01 && US02.

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (String.t): Unique identifier for the company.
  - `project_id` (String.t): Unique identifier for the project.
  - `prime_contract_id` (String.t): Unique identifier for the Prime Contract.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v20_companies_company_id_projects_project_id_prime_contracts_prime_contract_id_pdf_post(
          Tesla.Env.client(),
          integer(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, Procore.Model.RestV20CompaniesCompanyIdWorkflowsToolsGet401Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v20_companies_company_id_projects_project_id_prime_contracts_prime_contract_id_pdf_post(
        connection,
        procore_company_id,
        company_id,
        project_id,
        prime_contract_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/rest/v2.0/companies/#{company_id}/projects/#{project_id}/prime_contracts/#{prime_contract_id}/pdf"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false},
      {400, Procore.Model.RestV20CompaniesCompanyIdWorkflowsToolsGet401Response},
      {401, Procore.Model.RestV20CompaniesCompanyIdWorkflowsToolsGet401Response},
      {403, Procore.Model.RestV20CompaniesCompanyIdWorkflowsToolsGet401Response},
      {404, Procore.Model.RestV20CompaniesCompanyIdWorkflowsToolsGet401Response}
    ])
  end
end
