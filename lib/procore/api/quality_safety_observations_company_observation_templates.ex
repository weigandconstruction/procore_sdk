# NOTE: This file is auto generated by OpenAPI Generator 7.7.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.QualitySafetyObservationsCompanyObservationTemplates do
  @moduledoc """
  API calls for all endpoints tagged `QualitySafetyObservationsCompanyObservationTemplates`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  Bulk Update Company Observation Templates
  Updates multiple Company Observation Templates

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `company_id` (integer()): Unique identifier for the company.
  - `rest_v10_companies_company_id_observation_templates_bulk_update_patch_request` (RestV10CompaniesCompanyIdObservationTemplatesBulkUpdatePatchRequest): 
  - `opts` (keyword): Optional parameters
    - `:observation_template_ids` ([integer()]): IDs of all Company Observation Templates specified for bulk update

  ### Returns

  - `{:ok, [%CompanyObservationTemplate1{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_companies_company_id_observation_templates_bulk_update_patch(
          Tesla.Env.client(),
          integer(),
          integer(),
          Procore.Model.RestV10CompaniesCompanyIdObservationTemplatesBulkUpdatePatchRequest.t(),
          keyword()
        ) ::
          {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok, list(Procore.Model.CompanyObservationTemplate1.t())}
          | {:error, Tesla.Env.t()}
  def rest_v10_companies_company_id_observation_templates_bulk_update_patch(
        connection,
        procore_company_id,
        company_id,
        rest_v10_companies_company_id_observation_templates_bulk_update_patch_request,
        opts \\ []
      ) do
    optional_params = %{
      :observation_template_ids => :query
    }

    request =
      %{}
      |> method(:patch)
      |> url("/rest/v1.0/companies/#{company_id}/observation_templates/bulk_update")
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(
        :body,
        :body,
        rest_v10_companies_company_id_observation_templates_bulk_update_patch_request
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Procore.Model.CompanyObservationTemplate1},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {404, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {422, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end
end
