# NOTE: This file is auto generated by OpenAPI Generator 7.7.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.ConstructionFinancialsCommitmentsWorkOrderContractDetailLineItems do
  @moduledoc """
  API calls for all endpoints tagged `ConstructionFinancialsCommitmentsWorkOrderContractDetailLineItems`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  List Work Order Contract detail line items
  List Detail Line Items on a given Work Order Contract

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `work_order_contract_id` (integer()): Work Order Contract ID
  - `project_id` (integer()): Unique identifier for the project.
  - `opts` (keyword): Optional parameters
    - `:"filters[id]"` ([integer()]): Return item(s) with the specified IDs.
    - `:"filters[line_item_id]"` (integer()): Line Item ID. Returns item(s) with the specified Line Item ID or within a range of Line Item IDs.

  ### Returns

  - `{:ok, [%RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsGet200ResponseInner{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdSubcontractorScheduleOfValuesStatusPatch404Response.t()}
          | {:ok,
             list(
               Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsGet200ResponseInner.t()
             )}
          | {:error, Tesla.Env.t()}
  def rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_get(
        connection,
        procore_company_id,
        work_order_contract_id,
        project_id,
        opts \\ []
      ) do
    optional_params = %{
      :"filters[id]" => :query,
      :"filters[line_item_id]" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/rest/v1.0/work_order_contracts/#{work_order_contract_id}/line_item_contract_details"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:query, :project_id, project_id)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200,
       Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsGet200ResponseInner},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {404,
       Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdSubcontractorScheduleOfValuesStatusPatch404Response},
      {:default, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end

  @doc """
  Delete Work Order Contract detail line item
  Delete a Detail Line Item in a specific Work Order Contract.

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `work_order_contract_id` (integer()): Work Order Contract ID
  - `id` (integer()): ID
  - `project_id` (integer()): Unique identifier for the project.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_id_delete(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdSubcontractorScheduleOfValuesStatusPatch404Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_id_delete(
        connection,
        procore_company_id,
        work_order_contract_id,
        id,
        project_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:delete)
      |> url(
        "/rest/v1.0/work_order_contracts/#{work_order_contract_id}/line_item_contract_details/#{id}"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:query, :project_id, project_id)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {404,
       Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdSubcontractorScheduleOfValuesStatusPatch404Response},
      {422, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {:default, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end

  @doc """
  Show Work Order Contract detail line item
  Return a Detail Line Item in a specific Work Order Contract.

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `work_order_contract_id` (integer()): Work Order Contract ID
  - `id` (integer()): ID
  - `project_id` (integer()): Unique identifier for the project.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsPost201Response.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_id_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok,
           Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsPost201Response.t()}
          | {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok,
             Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdSubcontractorScheduleOfValuesStatusPatch404Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_id_get(
        connection,
        procore_company_id,
        work_order_contract_id,
        id,
        project_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:get)
      |> url(
        "/rest/v1.0/work_order_contracts/#{work_order_contract_id}/line_item_contract_details/#{id}"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:query, :project_id, project_id)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200,
       Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsPost201Response},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {404,
       Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdSubcontractorScheduleOfValuesStatusPatch404Response},
      {:default, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end

  @doc """
  Update Work Order Contract detail line item
  Update a Detail Line Item in a specific Work Order Contract.

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `work_order_contract_id` (integer()): Work Order Contract ID
  - `id` (integer()): ID
  - `body4` (Body4): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsPost201Response.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_id_patch(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          Procore.Model.Body4.t(),
          keyword()
        ) ::
          {:ok,
           Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsPost201Response.t()}
          | {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_id_patch(
        connection,
        procore_company_id,
        work_order_contract_id,
        id,
        body4,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/rest/v1.0/work_order_contracts/#{work_order_contract_id}/line_item_contract_details/#{id}"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:body, :body, body4)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200,
       Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsPost201Response},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {:default, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end

  @doc """
  Create Work Order Contract detail line item
  Creates a Detail Line Item on a given Work Order Contract Line Item

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `work_order_contract_id` (integer()): Work Order Contract ID
  - `body4` (Body4): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsPost201Response.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_post(
          Tesla.Env.client(),
          integer(),
          integer(),
          Procore.Model.Body4.t(),
          keyword()
        ) ::
          {:ok,
           Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsPost201Response.t()}
          | {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_work_order_contracts_work_order_contract_id_line_item_contract_details_post(
        connection,
        procore_company_id,
        work_order_contract_id,
        body4,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/rest/v1.0/work_order_contracts/#{work_order_contract_id}/line_item_contract_details"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:body, :body, body4)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {201,
       Procore.Model.RestV10WorkOrderContractsWorkOrderContractIdLineItemContractDetailsPost201Response},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {:default, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end
end
