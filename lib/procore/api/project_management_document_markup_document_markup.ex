# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.ProjectManagementDocumentMarkupDocumentMarkup do
  @moduledoc """
  API calls for all endpoints tagged `ProjectManagementDocumentMarkupDocumentMarkup`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  Show or Create Document Markup Downloadable PDF
  Find or Create Document Markup Downloadable PDF. Starts processing to create a downloadable PDF with markup. When completed, the same request will include a download URL for the PDF. item_id, item_type, and attachment_id paramters are the same parameters included in the URL when viewing the attachment in procore. Example: app.procore.com/161072/project/submittal_logs/document_viewer?attachment_id=43&item_id=42&item_type=SubmittalLog&project_id=161072

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request` (RestV10DocumentMarkupDownloadablePdfsFindOrCreatePostRequest): 
  - `opts` (keyword): Optional parameters
    - `:version_datetime` (String.t): Version Datetime of the Document

  ### Returns

  - `{:ok, Procore.Model.RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost200Response.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_document_markup_downloadable_pdfs_find_or_create_post(
          Tesla.Env.client(),
          integer(),
          Procore.Model.RestV10DocumentMarkupDownloadablePdfsFindOrCreatePostRequest.t(),
          keyword()
        ) ::
          {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok,
             Procore.Model.RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost202Response.t()}
          | {:ok,
             Procore.Model.RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost409Response.t()}
          | {:ok,
             Procore.Model.RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost200Response.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_document_markup_downloadable_pdfs_find_or_create_post(
        connection,
        procore_company_id,
        rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request,
        opts \\ []
      ) do
    optional_params = %{
      :version_datetime => :query
    }

    request =
      %{}
      |> method(:post)
      |> url("/rest/v1.0/document_markup_downloadable_pdfs/find_or_create")
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(
        :body,
        :body,
        rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Procore.Model.RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost200Response},
      {202, Procore.Model.RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost202Response},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {404, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {409, Procore.Model.RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost409Response},
      {422, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {:default, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end
end
