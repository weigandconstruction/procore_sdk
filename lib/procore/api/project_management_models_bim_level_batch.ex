# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.ProjectManagementModelsBIMLevelBatch do
  @moduledoc """
  API calls for all endpoints tagged `ProjectManagementModelsBIMLevelBatch`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  Create a batch of BIM Levels
  Create a batch of BIM Levels

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `body134` (Body134): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, Procore.Model.BimLevelBatchCreateResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_bim_levels_batch_post(
          Tesla.Env.client(),
          integer(),
          Procore.Model.Body134.t(),
          keyword()
        ) ::
          {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok, Procore.Model.BimLevelBatchCreateResponse.t()}
          | {:error, Tesla.Env.t()}
  def rest_v10_bim_levels_batch_post(connection, procore_company_id, body134, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/rest/v1.0/bim_levels/batch")
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_param(:body, :body, body134)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Procore.Model.BimLevelBatchCreateResponse},
      {400, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {:default, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end
end
