# NOTE: This file is auto generated by OpenAPI Generator 7.7.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Procore.Api.QualitySafetyInspectionsChecklistScheduleChangeHistories do
  @moduledoc """
  API calls for all endpoints tagged `QualitySafetyInspectionsChecklistScheduleChangeHistories`.
  """

  alias Procore.Connection
  import Procore.RequestBuilder

  @doc """
  List Checklist Schedule Change Histories
  Lists Checklist Schedule Change Histories for given Project and Schedule

  ### Parameters

  - `connection` (Procore.Connection): Connection to server
  - `procore_company_id` (integer()): Unique company identifier associated with the Procore User Account.
  - `project_id` (integer()): Unique identifier for the project.
  - `schedule_id` (integer()): Checklist Schedule ID
  - `opts` (keyword): Optional parameters
    - `:page` (integer()): Page
    - `:per_page` (integer()): Elements per page

  ### Returns

  - `{:ok, [%ChecklistScheduleChangeHistory{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec rest_v10_projects_project_id_checklist_schedules_schedule_id_change_history_get(
          Tesla.Env.client(),
          integer(),
          integer(),
          integer(),
          keyword()
        ) ::
          {:ok, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response.t()}
          | {:ok, list(Procore.Model.ChecklistScheduleChangeHistory.t())}
          | {:error, Tesla.Env.t()}
  def rest_v10_projects_project_id_checklist_schedules_schedule_id_change_history_get(
        connection,
        procore_company_id,
        project_id,
        schedule_id,
        opts \\ []
      ) do
    optional_params = %{
      :page => :query,
      :per_page => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/rest/v1.0/projects/#{project_id}/checklist/schedules/#{schedule_id}/change_history"
      )
      |> add_param(:headers, :"Procore-Company-Id", procore_company_id)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, Procore.Model.ChecklistScheduleChangeHistory},
      {401, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response},
      {403, Procore.Model.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response}
    ])
  end
end
